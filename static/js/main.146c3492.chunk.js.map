{"version":3,"sources":["assets/DOWNLOAD.svg","assets/FORWARD 2.svg","assets/GRID.svg","assets/GIFT.svg","assets/HOME.svg","assets/MAP.svg","assets/MAP PIN.svg","assets/MUSIC.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","className","right","top","height","color","imgSrc","logo","onClick","console","log","logo2","logo3","logo4","logo5","logo6","logo7","logo8","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"mIAAAA,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,kBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,sBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,iTCuI5BC,MA1Hf,WACE,OACI,yBAAKC,UAAU,cACb,kBAAC,IAAD,CACIC,OAAO,EACPC,KAAK,EACLC,OAAQ,GACRC,MAAO,SAET,kBAAC,IAAD,CACIC,OAAQC,IACRC,QAAS,WACPC,QAAQC,IAAI,WAGlB,kBAAC,IAAD,CACIJ,OAAQK,IACRH,QAAS,WACPC,QAAQC,IAAI,YAGlB,kBAAC,IAAD,CACIJ,OAAQM,IACRJ,QAAS,WACPC,QAAQC,IAAI,YAGlB,kBAAC,IAAD,CACIJ,OAAQO,IACRL,QAAS,WACPC,QAAQC,IAAI,YAGlB,kBAAC,IAAD,CACIJ,OAAQQ,IACRN,QAAS,WACPC,QAAQC,IAAI,YAGlB,kBAAC,IAAD,CACIJ,OAAQS,IACRP,QAAS,WACPC,QAAQC,IAAI,YAGlB,kBAAC,IAAD,CACIJ,OAAQU,IACRR,QAAS,WACPC,QAAQC,IAAI,YAGlB,kBAAC,IAAD,CACIJ,OAAQW,IACRT,QAAS,WACPC,QAAQC,IAAI,aAIpB,kBAAC,IAAD,CAAgBR,OAAO,EAAOC,KAAK,EAAMC,OAAQ,IAC/C,kBAAC,IAAD,CACIE,OAAQC,IACRC,QAAS,WACPC,QAAQC,IAAI,WAGlB,kBAAC,IAAD,CACIJ,OAAQK,IACRH,QAAS,WACPC,QAAQC,IAAI,YAGlB,kBAAC,IAAD,CACIJ,OAAQM,IACRJ,QAAS,WACPC,QAAQC,IAAI,aAIpB,kBAAC,IAAD,CAAgBR,OAAO,EAAOC,KAAK,EAAOC,OAAQ,KAChD,kBAAC,IAAD,CACIE,OAAQC,IACRC,QAAS,WACPC,QAAQC,IAAI,WAGlB,kBAAC,IAAD,CACIJ,OAAQK,IACRH,QAAS,WACPC,QAAQC,IAAI,YAGlB,kBAAC,IAAD,CACIJ,OAAQM,IACRJ,QAAS,WACPC,QAAQC,IAAI,YAGlB,kBAAC,IAAD,CACIJ,OAAQO,IACRL,QAAS,WACPC,QAAQC,IAAI,YAGlB,kBAAC,IAAD,CACIJ,OAAQQ,IACRN,QAAS,WACPC,QAAQC,IAAI,aAIpB,kBAAC,IAAD,CAAgBR,OAAO,EAAMC,KAAK,EAAOC,OAAQ,KAC/C,kBAAC,IAAD,CACIE,OAAQC,IACRC,QAAS,WACPC,QAAQC,IAAI,cCnHRQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL1B,QAAQ0B,MAAMA,EAAMC,c","file":"static/js/main.146c3492.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/DOWNLOAD.7e65f1ae.svg\";","module.exports = __webpack_public_path__ + \"static/media/FORWARD 2.6f01845c.svg\";","module.exports = __webpack_public_path__ + \"static/media/GRID.5a25150d.svg\";","module.exports = __webpack_public_path__ + \"static/media/GIFT.03d0b909.svg\";","module.exports = __webpack_public_path__ + \"static/media/HOME.695748c1.svg\";","module.exports = __webpack_public_path__ + \"static/media/MAP.a4eb782b.svg\";","module.exports = __webpack_public_path__ + \"static/media/MAP PIN.cf396ce1.svg\";","module.exports = __webpack_public_path__ + \"static/media/MUSIC.e7f8db9c.svg\";","import React from \"react\";\nimport \"./App.css\";\nimport FloatingButton from \"react-floating-button\";\nimport Item from \"react-floating-button\";\nimport logo from \"./assets/DOWNLOAD.svg\";\nimport logo2 from \"./assets/FORWARD 2.svg\";\nimport logo3 from \"./assets/GRID.svg\";\nimport logo4 from \"./assets/GIFT.svg\";\nimport logo5 from \"./assets/HOME.svg\";\nimport logo6 from \"./assets/MAP.svg\";\nimport logo7 from \"./assets/MAP PIN.svg\";\nimport logo8 from \"./assets/MUSIC.svg\";\n\nfunction App() {\n  return (\n      <div className=\"App-header\">\n        <FloatingButton\n            right={true}\n            top={true}\n            height={80}\n            color={\"black\"}\n        >\n          <Item\n              imgSrc={logo}\n              onClick={() => {\n                console.log(\"logo\");\n              }}\n          />\n          <Item\n              imgSrc={logo2}\n              onClick={() => {\n                console.log(\"logo2\");\n              }}\n          />\n          <Item\n              imgSrc={logo3}\n              onClick={() => {\n                console.log(\"logo3\");\n              }}\n          />\n          <Item\n              imgSrc={logo4}\n              onClick={() => {\n                console.log(\"logo4\");\n              }}\n          />\n          <Item\n              imgSrc={logo5}\n              onClick={() => {\n                console.log(\"logo5\");\n              }}\n          />\n          <Item\n              imgSrc={logo6}\n              onClick={() => {\n                console.log(\"logo6\");\n              }}\n          />\n          <Item\n              imgSrc={logo7}\n              onClick={() => {\n                console.log(\"logo7\");\n              }}\n          />\n          <Item\n              imgSrc={logo8}\n              onClick={() => {\n                console.log(\"logo8\");\n              }}\n          />\n        </FloatingButton>\n        <FloatingButton right={false} top={true} height={30}>\n          <Item\n              imgSrc={logo}\n              onClick={() => {\n                console.log(\"logo\");\n              }}\n          />\n          <Item\n              imgSrc={logo2}\n              onClick={() => {\n                console.log(\"logo2\");\n              }}\n          />\n          <Item\n              imgSrc={logo3}\n              onClick={() => {\n                console.log(\"logo3\");\n              }}\n          />\n        </FloatingButton>\n        <FloatingButton right={false} top={false} height={200}>\n          <Item\n              imgSrc={logo}\n              onClick={() => {\n                console.log(\"logo\");\n              }}\n          />\n          <Item\n              imgSrc={logo2}\n              onClick={() => {\n                console.log(\"logo2\");\n              }}\n          />\n          <Item\n              imgSrc={logo3}\n              onClick={() => {\n                console.log(\"logo3\");\n              }}\n          />\n          <Item\n              imgSrc={logo4}\n              onClick={() => {\n                console.log(\"logo4\");\n              }}\n          />\n          <Item\n              imgSrc={logo5}\n              onClick={() => {\n                console.log(\"logo5\");\n              }}\n          />\n        </FloatingButton>\n        <FloatingButton right={true} top={false} height={100}>\n          <Item\n              imgSrc={logo}\n              onClick={() => {\n                console.log(\"logo\");\n              }}\n          />\n        </FloatingButton>\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}